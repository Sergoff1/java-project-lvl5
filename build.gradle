plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.github.ben-manes.versions" version "0.40.0"
	id "com.adarshr.test-logger" version "3.1.0"
	id 'application'
	id 'checkstyle'
	id 'jacoco'
	id 'org.liquibase.gradle' version '2.1.1'
	id 'org.siouan.frontend-jdk11' version '6.0.0'
	id "com.github.johnrengelman.processes" version "0.5.0"
	id "org.springdoc.openapi-gradle-plugin" version "1.3.3"
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
sourceCompatibility = '16'

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'


	implementation (
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-data-jpa:2.6.2',
			'org.springframework.boot:spring-boot-starter-security',
			'org.liquibase:liquibase-core:4.6.2',
			'io.jsonwebtoken:jjwt-api:0.11.2',
			'io.jsonwebtoken:jjwt-impl:0.11.2',
			'com.querydsl:querydsl-core:5.0.0',
			'com.querydsl:querydsl-jpa:5.0.0',
			'org.springdoc:springdoc-openapi-ui:1.6.4'
	)
	annotationProcessor (
			'com.querydsl:querydsl-apt:5.0.0:jpa',
			'org.projectlombok:lombok',
			'javax.annotation:javax.annotation-api:1.3.2',
			'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
	)

	runtimeOnly (
			'io.jsonwebtoken:jjwt-jackson:0.11.2',
			'org.postgresql:postgresql',
			'com.h2database:h2'
	)

	liquibaseRuntime (
			sourceSets.main.output,
			'org.liquibase:liquibase-core:4.6.2',
			'org.liquibase.ext:liquibase-hibernate5:4.6.2',
			'org.springframework.boot:spring-boot-starter-data-jpa:2.3.0.RELEASE'
	)

	testImplementation (
			'org.springframework.boot:spring-boot-starter-test',
			'com.github.database-rider:rider-junit5:1.32.0'
	)
}

application {
	mainClass = 'hexlet.code.app.AppApplication'
}

diffChangeLog {
	dependsOn compileJava
}

liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
			url 'jdbc:h2:./taskmgr'
			username ''
			password ''
			referenceUrl 'hibernate:spring:hexlet.code.model' +
					'?dialect=org.hibernate.dialect.H2Dialect' +
					'&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy'
		}
	}
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}


frontend {
	nodeVersion = '16.13.1'
	installScript = 'install'
	assembleScript = 'run build'
	packageJsonDirectory = file("${projectDir}/frontend")
}

def configFrontendTasks = {
	inputs.files(fileTree("$projectDir/frontend").exclude('build', 'node_modules'))
	outputs.dir("$buildDir/resources/main/static")
}

assembleFrontend {
	configure configFrontendTasks

	doLast {
		copy {
			from "$projectDir/frontend/build"
			into "$buildDir/resources/main/static"
		}
	}
}

installFrontend {
	configure configFrontendTasks
}

processResources.dependsOn assembleFrontend
